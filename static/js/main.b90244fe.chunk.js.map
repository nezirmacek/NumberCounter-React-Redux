{"version":3,"sources":["components/buttons/Buttons.js","components/counter/Counter.js","components/counterlist/CounterList.js","actions/ActionTypes.js","utils/index.js","containers/CounterListContainer.js","actions/index.js","containers/App.js","reducers/index.js","index.js"],"names":["Buttons","_ref","onCreate","onRemove","react_default","a","createElement","className","onClick","defaultProps","console","warn","Counter","number","color","index","onIncrement","onDecrement","onSetColor","onContextMenu","e","preventDefault","onDoubleClick","style","backgroundColor","CounterList","counters","counterList","map","counter","i","components_counter_Counter","Object","assign","key","toJS","CREATE","REMOVE","INCREMENT","DECREMENT","SET_COLOR","getRandomColor","Math","floor","random","CounterListContainer","connect","state","get","dispatch","type","types","actions","App","_this$props","this","props","components_buttons_Buttons","containers_CounterListContainer","Component","initialState","Map","List","arguments","length","undefined","action","set","push","pop","update","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.b90244fe.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Buttons.css';\n\nconst Buttons = ({onCreate, onRemove}) => {\n    return (\n        <div className=\"Buttons\">\n            <div className=\"btn add\" onClick={onCreate}>\n                Create\n            </div>\n            <div className=\"btn remove\" onClick={onRemove}>\n                Remove\n            </div>\n        </div>\n    );\n};\n\nButtons.propTypes = {\n    onCreate: PropTypes.func,\n    onRemove: PropTypes.func\n};\n\nButtons.defaultProps = {\n    onCreate: ()=> console.warn('onCreate not defined'),\n    onRemove: ()=> console.warn('onRemove mot defined')\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Counter.css';\n\nconst Counter = ({number, color, index, onIncrement, onDecrement, onSetColor}) => {\n    return (\n        <div \n            className=\"Counter\" \n            onClick={() => onIncrement(index)} \n            onContextMenu={\n                (e) => { \n                    e.preventDefault(); \n                    onDecrement(index);\n                }\n            } \n            onDoubleClick={() => onSetColor(index)}\n            style={{backgroundColor: color}}>\n                {number}\n        </div>\n    );\n};\n\nCounter.propTypes = {\n    index: PropTypes.number,\n    number: PropTypes.number,\n    color: PropTypes.string,\n    onIncrement: PropTypes.func,\n    onDecrement: PropTypes.func,\n    onSetColor: PropTypes.func\n};\n\nCounter.defaultProps = {\n    index: 0,\n    number: 0,\n    color: 'black',\n    onIncrement: () => console.warn('onIncrement not defined'),\n    onDecrement: () => console.warn('onDecrement not defined'),\n    onSetColor: () => console.warn('onSetColor not defined')\n};\n\nexport default Counter;","import React from 'react';\nimport Counter from '../counter/Counter';\nimport PropTypes from 'prop-types';\nimport { List } from 'immutable';\n\nimport './CounterList.css';\n\nconst CounterList = ({counters, onIncrement, onDecrement, onSetColor}) => {\n\n    const counterList = counters.map(\n        (counter, i) => (\n            <Counter \n                key={i}\n                index={i}\n                {...counter.toJS()}\n                onIncrement={onIncrement}\n                onDecrement={onDecrement}\n                onSetColor={onSetColor}\n            />\n        )\n    );\n\n    return (\n        <div className=\"CounterList\">\n            {counterList}\n        </div>\n    );\n};\n\nCounterList.propTypes = {\n    counters: PropTypes.instanceOf(List),\n    onIncrement: PropTypes.func,\n    onDecrement: PropTypes.func,\n    onSetColor: PropTypes.func\n};\n\nCounterList.defaultProps = {\n    counters: [],\n    onIncrement: () => console.warn('onIncrement not defined'),\n    onDecrement: () => console.warn('onDecrement not defined'),\n    onSetColor: () => console.warn('onSetColor not defined')\n}\n\nexport default CounterList;","// for add and remove new counter\nexport const CREATE = 'CREATE';\nexport const REMOVE = 'REMOVE';\n\nexport const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const SET_COLOR = 'SET_COLOR';","export function getRandomColor() {\n    const colors = [\n        '#495057',\n        '#f03e3e',\n        '#d6336c',\n        '#ae3ec9',\n        '#7048e8',\n        '#4263eb',\n        '#1c7cd6',\n        '#1098ad',\n        '#0ca678',\n        '#37b24d',\n        '#74b816',\n        '#f59f00',\n        '#f76707'\n    ];\n\n    // 0 부터 12까지 랜덤 숫자\n    const random = Math.floor(Math.random() * 13);\n\n    // 랜덤 색상 반환\n    return colors[random];\n}","import CounterList from '../components/counterlist/CounterList';\nimport * as actions from '../actions';\nimport { connect } from 'react-redux';\nimport { getRandomColor } from '../utils';\n\nconst mapStateToProps = (state) => ({\n    counters: state.get('counters')\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onIncrement: (index) => dispatch(actions.increment(index)),\n    onDecrement: (index) => dispatch(actions.decrement(index)),\n    onSetColor: (index) => {\n        const color = getRandomColor();\n        dispatch(actions.setColor({index, color}));\n    }\n})\n\nconst CounterListContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(CounterList);\n\nexport default CounterListContainer;","import * as types from './ActionTypes';\n\nexport const create = (color) => ({\n    type: types.CREATE,\n    color\n});\n\nexport const remove = () => ({\n    type: types.REMOVE\n});\n\nexport const increment = (index) => ({\n    type: types.INCREMENT,\n    index\n});\n\nexport const decrement = (index) => ({\n    type: types.DECREMENT,\n    index\n});\n\nexport const setColor = ({index, color}) => ({\n    type: types.SET_COLOR,\n    index,\n    color\n});","import React, { Component } from 'react';\nimport Buttons from '../components/buttons/Buttons';\nimport CounterListContainer from './CounterListContainer';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\n\nimport { getRandomColor } from '../utils';\n\nclass App extends Component {\n  render() {\n   const { onCreate, onRemove } = this.props;\n    return (\n      <div className=\"App\">\n        <Buttons\n              onCreate={onCreate}\n              onRemove={onRemove}\n         />\n        <CounterListContainer/>\n      </div>\n    );\n  }\n}\n\n// action functions\nconst mapToDispatch = (dispatch) => ({\n  onCreate: () => dispatch(actions.create(getRandomColor())),\n  onRemove: (index) => dispatch(actions.remove(index))\n});\n\n// connect to redux and export\nexport default connect(null, mapToDispatch)(App);\n","\nimport * as types from '../actions/ActionTypes';\nimport { Map, List } from 'immutable';\n\nconst initialState =  Map({\n    counters: List([\n        Map({\n            color:'black',\n            number: 0\n        })\n    ])\n})\n\nfunction counter(state = initialState, action){\n    \n    const counters = state.get('counters');\n\n    switch(action.type){\n\n        case types.CREATE:\n            return state.set('counters', counters.push(Map({\n                color:action.color,\n                number: 0\n            })));\n        case types.REMOVE:\n            return state.set('counters', counters.pop());\n\n      \n        case types.INCREMENT:\n            return state.set('counters', counters.update(\n                action.index, \n                (counter) => counter.set('number', counter.get('number') + 1))\n            );\n\n      \n        case types.DECREMENT:\n            return state.set('counters', counters.update(\n                action.index, \n                (counter) => counter.set('number', counter.get('number') - 1))\n            );\n    \n        case types.SET_COLOR:\n            return state.set('counters', counters.update(\n                action.index, \n                (counter) => counter.set('color', action.color))\n            );\n\n        default:\n            return state; \n    }\n};\n\nexport default counter","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './index.css';\n\n// for redux\nimport { createStore } from 'redux'\nimport reducers from './reducers';\nimport {Provider} from 'react-redux'; //provider component\n\n// create store\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}